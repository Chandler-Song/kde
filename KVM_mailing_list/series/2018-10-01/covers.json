[{"id":10622097,"url":"https://patchwork.kernel.org/api/covers/10622097/?format=json","web_url":"https://patchwork.kernel.org/cover/10622097/","project":{"id":8,"url":"https://patchwork.kernel.org/api/projects/8/?format=json","name":"KVM mailing list","link_name":"kvm","list_id":"kvm.vger.kernel.org","list_email":"kvm@vger.kernel.org","web_url":null,"scm_url":null,"webscm_url":null},"msgid":"<20181001130656.36999-1-marc.zyngier@arm.com>","date":"2018-10-01T13:06:54","name":"[0/2] KVM: arm64: Dynamic IPA cosmetic fixups","submitter":{"id":28962,"url":"https://patchwork.kernel.org/api/people/28962/?format=json","name":"Marc Zyngier","email":"Marc.Zyngier@arm.com"},"mbox":"https://patchwork.kernel.org/cover/10622097/mbox/","series":[{"id":25245,"url":"https://patchwork.kernel.org/api/series/25245/?format=json","date":"2018-10-01T13:06:54","name":"KVM: arm64: Dynamic IPA cosmetic fixups","version":1,"mbox":"https://patchwork.kernel.org/series/25245/mbox/"}],"comments":"https://patchwork.kernel.org/api/covers/10622097/comments/"},{"id":10622179,"url":"https://patchwork.kernel.org/api/covers/10622179/?format=json","web_url":"https://patchwork.kernel.org/cover/10622179/","project":{"id":8,"url":"https://patchwork.kernel.org/api/projects/8/?format=json","name":"KVM mailing list","link_name":"kvm","list_id":"kvm.vger.kernel.org","list_email":"kvm@vger.kernel.org","web_url":null,"scm_url":null,"webscm_url":null},"msgid":"<20181001142010.21132-1-vkuznets@redhat.com>","date":"2018-10-01T14:20:01","name":"[v3,0/9] x86/kvm/nVMX: optimize MMU switch between L1 and L2","submitter":{"id":99981,"url":"https://patchwork.kernel.org/api/people/99981/?format=json","name":"Vitaly Kuznetsov","email":"vkuznets@redhat.com"},"mbox":"https://patchwork.kernel.org/cover/10622179/mbox/","series":[{"id":25273,"url":"https://patchwork.kernel.org/api/series/25273/?format=json","date":"2018-10-01T14:20:01","name":"x86/kvm/nVMX: optimize MMU switch between L1 and L2","version":3,"mbox":"https://patchwork.kernel.org/series/25273/mbox/"}],"comments":"https://patchwork.kernel.org/api/covers/10622179/comments/"},{"id":10622755,"url":"https://patchwork.kernel.org/api/covers/10622755/?format=json","web_url":"https://patchwork.kernel.org/cover/10622755/","project":{"id":8,"url":"https://patchwork.kernel.org/api/projects/8/?format=json","name":"KVM mailing list","link_name":"kvm","list_id":"kvm.vger.kernel.org","list_email":"kvm@vger.kernel.org","web_url":null,"scm_url":null,"webscm_url":null},"msgid":"<20181001212534.20073-1-sean.j.christopherson@intel.com>","date":"2018-10-01T21:25:32","name":"[0/2] KVM: VMX: clean up virtual APIC control handling","submitter":{"id":171409,"url":"https://patchwork.kernel.org/api/people/171409/?format=json","name":"Sean Christopherson","email":"sean.j.christopherson@intel.com"},"mbox":"https://patchwork.kernel.org/cover/10622755/mbox/","series":[{"id":25461,"url":"https://patchwork.kernel.org/api/series/25461/?format=json","date":"2018-10-01T21:25:32","name":"KVM: VMX: clean up virtual APIC control handling","version":1,"mbox":"https://patchwork.kernel.org/series/25461/mbox/"}],"comments":"https://patchwork.kernel.org/api/covers/10622755/comments/"}]